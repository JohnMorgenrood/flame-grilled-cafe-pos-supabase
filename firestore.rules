rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId;
    }
    
    // Menu items - everyone can read, temporarily allow write for setup
    match /menu/{itemId} {
      allow read: if true;
      allow write: if true; // Temporarily allow for initial setup
    }
    
    // Orders - role-based access control
    match /orders/{orderId} {
      allow read: if isAdmin() || isCashier() || isOwner();
      allow create: if isCustomer() || request.auth == null; // Allow anonymous orders for mobile app
      allow update: if isCashier() || isAdmin();
    }

    // Mobile orders - for anonymous customers
    match /mobile_orders/{orderId} {
      allow read, write: if true; // Open access for mobile ordering
    }

    // Favorites - customers can manage their own favorites
    match /favorites/{userId} {
      allow read, write: if request.auth.uid == userId;
    }

    // Restaurant settings - only admins can modify
    match /settings/{settingId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Analytics and reports - admin only
    match /analytics/{reportId} {
      allow read, write: if isAdmin();
    }

    // Kitchen orders - cashiers and admins can manage
    match /kitchen_orders/{orderId} {
      allow read, write: if isAdmin() || isCashier();
    }

    // Receipts - cashiers can create, admins can read all
    match /receipts/{receiptId} {
      allow read: if isAdmin() || isCashier();
      allow create: if isCashier() || isAdmin();
      allow update: if isAdmin();
    }

    // Transactions - for admin reporting and analytics
    match /transactions/{transactionId} {
      allow read: if isAdmin() || isCashier();
      allow create: if isCashier() || isAdmin();
      allow update: if isAdmin();
    }

    // Daily sales summary - admin only
    match /daily_sales/{date} {
      allow read, write: if isAdmin();
    }

    // Helper functions to check user roles
    function isAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin";
    }
    
    function isCashier() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "cashier";
    }
    
    function isCustomer() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "customer";
    }
    
    function isOwner() {
      return request.auth != null && request.auth.uid == resource.data.userId;
    }
  }
}
